Задание
Выведите справку по команде numpy.linspace() в ячейке ниже.

In [19]:
import numpy
print(numpy.linspace(1, 2, 3))
[1.  1.5 2. ]
Задание
Посмотрите, что будет, если записать по индексу [1] любое значение. Как видно, функция index() вызывается от самого списка (то есть это функция списка) и выводит индекс элемента, если такое значение есть. Теперь проверьте, что же будет, если вызвать index() по значению, которого нет?

In [12]:
list1 = ['1','2','3','4','5']
print(list1.index('1'))
print(list1.index('6'))
0
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-12-ca9f7ec31c8a> in <module>
      1 list1 = ['1','2','3','4','5']
      2 print(list1.index('1'))
----> 3 print(list1.index('6'))

ValueError: '6' is not in list
Отлично, вот конкретно это значение он возвращает, если элемента нет. Осталось узнать, как добавить элемент в список. Воспользуйтесь функцией append() списка, чтобы добавить элемент в список и выведите весь список.
In [13]:
list1 = ['1','2','3','4','5']
list1.append('6')
list1
Out[13]:
['1', '2', '3', '4', '5', '6']
Задание
Посмотрите, что будет, если записать по индексу [1] любое значение.

In [17]:
var_tuple = (1, '111', 'hey')
var_tuple.index(1)
Out[17]:
0
Задание
Попробуйте создать новый словарь new_dict с другими парами ключ-значение и воспользуйтесь функцией var_dict.update(new_dict) (мы передаем новый словарь как аргумент функции). Посмотрите, что поменялось в обоих словарях.

In [18]:
var_dict= {1: "one", 2: "three"}
new_dict = {2: "two"}
var_dict.update(new_dict)
print(var_dict)
new_dict = {3: "three"}
var_dict.update(new_dict)
print(var_dict)
{1: 'one', 2: 'two'}
{1: 'one', 2: 'two', 3: 'three'}
Задание
Создайте свое множество new_set и с помощью операторов "|" и "&" получите объединение и пересечение множеств. Выведите результаты.

In [58]:
new_set = {
    'abcd',
    'aefn'
}
print(new_set | var_set)
print(new_set & var_set)
{'abcd', 'no, keys', 'aefn', 'only unique values!'}
set()
In [20]:
x = set('wulichi')  
y = set(['atelichina'])  
x, y  
a=x & y 
b=x | y
print(a)
print(b)
set()
{'l', 'h', 'w', 'u', 'i', 'atelichina', 'c'}
Задание
Закрепим, создайте свой список и выполните проход по нему с помощью цикла for.

In [22]:
list = ['0','1','2','3','4','5','6','7','8','9']
for i in list:
    print(i)
0
1
2
3
4
5
6
7
8
9
Задание
Напишите функцию для вычисления периметра прямоугольника. В качестве аргументов передайте стороны прямоугольника.

In [25]:
def Perimeter(w, h):  
     return (w+h)*2 
print(Perimeter(1,2))
6
Задание
Напишите класс без конструктора (так можно, у него будет конструктор по-умолчанию) с методом, который на вход принимает число x и производит вычисления по формуле: $2*e^{x}$

Для вычисления степени экспоненты воспользуйтесь функцией exp() модуля math (не забудьте подключить его, устаналивать не требуется).

Выведите в цикле значения метода при целочисленных аргументах от 4 до 12 с использованием новой функции.

Для создания диапазона чисел (для цикла) воспользуйтесь справкой функции range()

In [1]:
import math
class myclass:
    def _init_(self,x):
        result = 2*math.exp(x)
    for x in range(4,13):
         result = 2*math.exp(x)
         result_2=round(result,2)
         print(result_2)
109.2
296.83
806.86
2193.27
5961.92
16206.17
44052.93
119748.28
325509.58
Задание
Напишите функцию, которая принимает имя, возраст и среднюю оценку в качестве аргументов и отображает данные тремя способами, рассмотренными ранее, в виде строк.

Добрый день! Мое имя: <name>, возраст: <age>, оценка: <avg_grade>. Приятно познакомиться!
Средняя оценка должна отображаться не более, чем с двумя символами после запятой.

In [30]:
def intro (name, age, grade):
    print(Привет, меня зовут %s и мне %d,оценка %.1f'(name,age,grade))
intro('chichi',23,88.88)
  File "<ipython-input-30-14032a250dd3>", line 2
    print(Привет, меня зовут %s и мне %d,оценка %.1f'(name,age,grade))
                       ^
SyntaxError: invalid syntax
Больше тренировок!
Задачка на среднее https://www.codewars.com/kata/563e320cee5dddcf77000158/train/python
Починка if условия https://www.codewars.com/kata/57089707fe2d01529f00024a/train/python
Поиск неиспользованного ID https://www.codewars.com/kata/55eea63119278d571d00006a/train/python
Работа со строками https://www.codewars.com/kata/55a70521798b14d4750000a4/train/python
Определение четности https://www.codewars.com/kata/53da3dbb4a5168369a0000fe/train/python
Удаление элементов строк (работа с индексами) https://www.codewars.com/kata/56bc28ad5bdaeb48760009b0/train/python
Регулярные выражения https://www.codewars.com/kata/57eae20f5500ad98e50002c5/train/python
Сложение https://www.codewars.com/kata/55d24f55d7dd296eb9000030/train/python
Подсчет овечек https://www.codewars.com/kata/54edbc7200b811e956000556/train/python
Подсчет гласных букв https://www.codewars.com/kata/54ff3102c1bad923760001f3/train/python
Строки-числа, поиск минимума/максимума https://www.codewars.com/kata/554b4ac871d6813a03000035/train/python
Поиск повторяющихся букв https://www.codewars.com/kata/54ba84be607a92aa900000f1/train/python
Замена символов https://www.codewars.com/kata/554e4a2f232cdd87d9000038/train/python
И т.д. на https://www.codewars.com/

Если хочется поиграть:

https://codecombat.com/
https://www.codingame.com/ide/puzzle/onboarding
